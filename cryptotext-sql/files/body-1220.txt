Yes, that seems to be the problem. Thank you very much.
Regards
James Wang
On Thu, Jul 9, 2009 at 11:12 AM, Gabriel Michael
Black<gblack@eecs.umich.edu> wrote:
> You might also want to check if the "this" pointer is valid. When you access
> "peer" your implicitly using it, and if you were to do something like ((Port
> *)(0))->sendTiming(pkt) the code could segfault like you're seeing.
>
> Gabe
>
> Quoting Cong Wang <jameswang99@yahoo.com>:
>
>> Hi all:
>>     I am trying to develop a trace driven system that uses physical
>> address. I use physical memory to create a request object then send
>> that to the memory hierarchy. As soon as my load operation send the
>> physical address down into the memory system, a segmentation fault
>> occurs. I trace the segmentation fault. It happens at an impossible
>> place, src/mem/port.hh:186. In that line, I have
>>  bool sendTiming(PacketPtr pkt) { assert(peer != NULL); return
>> peer->recvTiming(pkt);}
>>
>>    So, in general, I must be doing something naively wrong about
>> using physical memory. Any idea? Thanks for any comment in advance.
>>
>> --
>> Regards
>> James Wang
>> _______________________________________________
>> m5-users mailing list
>> m5-users@m5sim.org
>> http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
>>
>
>
>
--
- Show quoted text -Regards
James Wang
_______________________________________________
m5-users mailing list
m5-users@m5sim.org
http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
