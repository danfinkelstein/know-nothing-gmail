I saw similar issue with SMT execution. However, it happened when I ran
2-workload programs after some modifications. Two errors of this are: (1)
Unaligned memory access, and (2) Accessing to a free memory location. In my
case, errors happened because one instruction of thread A is not checked as
squashed in the instruction queue when being squashed, and it is still
executed and committed. After that the register which stores result of this
instruction in the scoreboard is checked as ready (although it has been
freed). Around that tick the register is allocated to be used by thread B.
One instruction of thread B which uses this register as source sees that the
register is ready, it reads old value from that register, and produces wrong
result. The wrong result is then propagated until one of the above errors
occurs.
There are two reasons of this issue:
(1) Some instructions are not checked as squashed when doSquash() is called
(in inst_queue_impl.hh).
(2) Sometimes doSquash() is not called (by squash() in inst_queue_impl.hh)
because count[tid] is equal to 0, but there are instructions to be squashed.
I tried relaxing the above restrictions by (1) calling setSquash() for every
instruction to be squashed in doSquash(), and (2) always calling doSquash()
in squash(). After that the issue seems to be resolved. I am wondering
whether the relaxations are safe enough?
A simple way to test this error might be asserting that a register has not
been checked as ready before scoreboard->setReg() is called by
writebackInsts() in iew_impl.hh.
Thanks,
--Nam
- Show quoted text -
-----Original Message-----
From: m5-users-bounces@m5sim.org [mailto:m5-users-bounces@m5sim.org] On
Behalf Of Shoaib Akram
Sent: Friday, April 25, 2008 1:31 PM
To: M5 users mailing list
Subject: Re: [m5-users] fault-unalign
ok. I will run again and give a trace. It happened with running a
multiprogramming workload conssiting of mesa and ammp but somehwere after
350 million instructions.
---- Original message ----
>Date: Fri, 25 Apr 2008 10:58:26 -0500
>From: Ali Saidi <saidi@umich.edu>
>Subject: Re: [m5-users] fault-unalign
>To: M5 users mailing list <m5-users@m5sim.org>
>
>Hmm that sounds like a bug. What are you running? Can you give us a
>snippet of the instruction trace around that instruction for both the
>timing and the detailed cpu? The only thing I can think of is that the
>o3 cpu speculates on a load or store, however it should realize that
>was the bad path and that fault shouldn't matter.
>
>Ali
>
>On Apr 25, 2008, at 4:53 AM, Shoaib Akram wrote:
>
>> when i run some benchmarks using detailed model, I have the error,
>> fault:unalign detected at PC XXX, while it doesnot occur with timing
>> model. Any insight?
>> _______________________________________________
>> m5-users mailing list
>> m5-users@m5sim.org
>> http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
>>
>
>_______________________________________________
>m5-users mailing list
>m5-users@m5sim.org
>http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
_______________________________________________
m5-users mailing list
m5-users@m5sim.org
http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
_______________________________________________
m5-users mailing list
m5-users@m5sim.org
http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
