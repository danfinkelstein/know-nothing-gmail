Yes, I'm sure the problem is unchanged, it's just that m5.fast compiles out assertions for speed.  You should never use m5.fast unless you're confident your code is fully debugged.  Note that m5.opt is a good tradeoff: it's much faster than m5.debug (since it enables compiler optimizations) but leaves assertions in.
The assertion itself has to do with the multi-level coherence algorithm.  If you get this assertion in the unmodified code from the head of the development tree then it's a bug in m5 and please let me know more.
Steve- Show quoted text -On Mon, Sep 29, 2008 at 10:30 AM, Clint Smullen <cws3k@cs.virginia.edu> wrote:
Assertions are disable in m5.fast, it does not mean that the error is
not occurring.
On Sep 29, 2008, at 1:25 PM, Shoaib Akram wrote:
> With m5.debug I receive an assertion failure, which disappears with
> m5.fast. Is it explicable? Any insight into the assertion itself
> will be appreciated.
>
> m5.debug: build/ALPHA_SE/mem/cache/mshr.cc:179: void
> MSHR::clearDownstreamPending(): Assertion `downstreamPending' failed.
> _______________________________________________
> m5-users mailing list
> m5-users@m5sim.org
> http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
_______________________________________________
m5-users mailing list
m5-users@m5sim.org
http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
_______________________________________________
m5-users mailing list
m5-users@m5sim.org
http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
