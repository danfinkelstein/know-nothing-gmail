Does anyone have any information on how the conversion from an address visible to a user program to a physical address stored on the simulated physical memory takes place? The page table attached to each process does not appear to use the same address space as the program itself. (for example, the program thinks a variable is at addr 0x200a3860, when in fact the load with the effective address send to the page_table translate function is 0x11ff91db0).
As I understand it, on alpha the PAL takes care of this memory management. In se mode though, how is this done?
I'm currently trying to set a thread's pc to the beginning of a function. The address of the function comes from a system call with a function pointer parameter. Any information on how to convert that function pointer to a physical address would be appreciated.
-Nick
_______________________________________________
m5-users mailing list
m5-users@m5sim.org
http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
