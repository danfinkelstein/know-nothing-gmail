m5_addsymbol was intended for adding symbols of kernel modules.  As a
pure guess, the problem with the pseudo instruction might be some sort
of virtual vs physical addressing issue.  Check out what is actually
looked up when you're trying to do something.
  Nate
- Show quoted text -
> I'm trying to add extra symbols to the symbol table M5 uses internally from
> user code using the m5_addsymbol() pseudo-instruction.  So far my attempts
> have not worked, user code is still being labeled at __bss_start.
>
>
>
> To add the symbols I'm using the wrapper functions provided by m5op.h.
>
>
>
> Here is a snippet of what I'm doing in the main function of the benchmark
> I'm using:
>
>
>
> …
>
> m5_addsymbol(&xactionAbort, "xactionAbort");
>
> m5_addsymbol(&xactioinBackoff, "xactionBackoff);
>
> …
>
>
>
> Will m5_addsymbol work for user code? Or will I have to modify M5 to work
> with user code symbols?
>
>
>
> Thanks,
>
> Geoff
>
> _______________________________________________
> m5-users mailing list
> m5-users@m5sim.org
> http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
>
_______________________________________________
m5-users mailing list
m5-users@m5sim.org
http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
