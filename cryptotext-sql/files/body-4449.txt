The linker gives the error.Does a C++ object have to have a python class associated with it to be used as a SimObjectParam? I think this may be the issue as I did not create an AlphaO3CPU python object. What would be the best way to go about passing references to either an AlphaO3CPU or DerivO3CPU object? DerivO3CPU has both a python and c++ object defined for it, but it seems like a temporary creation used in cpu_builder?-Nick- Show quoted text -On Jul 3, 2007, at 11:03 AM, Steve Reinhardt wrote:There's no intentional restriction... that ought to work.  It's probably some subtle C++ template thing.  Do you get the error from the compiler or from the linker?Steve On 7/2/07, Nicolas Zea <nzea2@uiuc.edu> wrote: Are there any limitations on what objects can be used asSimObjectParams? For my case, I want to  pass an AlphaO3CPU pointerto another object I constructed through the python configurations.Originally I had: SimObjectParam<AlphaO3CPU<AlphaSimpleImpl> *> thecpuas my parameter definition, but this gave an error complaining thatthere was noShowType(std::basic_ostream<char, std::char_traits<char> >&) const method defined for that object. Same goes for just trying to use theBaseO3CPU object. On the other hand, BaseCPU works fine.So what is it about BaseCpu that doesn't cause this error? From whatI can tell, the ShowType method is defined in param.hh for allSimObjectParam, regardless of what the templated object is. Maybe I'mlooking in the wrong place, or missing something.-Nick_______________________________________________m5-users mailing list m5-users@m5sim.orghttp://m5sim.org/cgi-bin/mailman/listinfo/m5-users_______________________________________________m5-users mailing listm5-users@m5sim.orghttp://m5sim.org/cgi-bin/mailman/listinfo/m5-users _______________________________________________
m5-users mailing list
m5-users@m5sim.org
http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
