Hi Meng-Ju,
You need to download the encumbered tar file (http://www.m5sim.org/dist/current/m5-2.0b3-encumbered.tar.bz2), uncompress it on-top of your m5 2.0b3 tree and recompile. We distributed the EIO code separately since it's subject to a more restrictive license.
Ali- Show quoted text -
On Sep 3, 2007, at 1:43 PM, Meng-Ju Wu wrote:
- Show quoted text -
Hi,
I tried to use eio file in M5 2.0b3, but I got an error message.
panic: Simulator object type 'EioProcess' not found
I checked the "src/python/m5/objects/Process.py" and the EioProcess() is defined in this file.
I modified the se.py to se_eio.py by using Michael's post on 10/11/06 and used the following command to execute the M5.
"build/ALPHA_SE/m5.debug configs/example/se_eio.py -d --caches --l2cache"
Then I got the following message.
command line: build/ALPHA_SE/m5.debug configs/example/se_eio.py -d --caches --l2cache
Global frequency set at 1000000000000 ticks per second
panic: Simulator object type 'EioProcess' not found.
 @ cycle 0
I tried this weekend, but I cannot solve this problem. I really appreciate if you can helpe me to find the solution.
Thanks,
Meng-Ju
This is my se_eio.py
import m5
from m5.objects import *
import os, optparse, sys
m5.AddToPath('../common')
import Simulation
from Caches import *
# Get paths we might need.  It's expected this file is in m5/configs/example.
config_path = os.path.dirname(os.path.abspath(__file__))
config_root = os.path.dirname(config_path)
m5_root = os.path.dirname(config_root)
parser = optparse.OptionParser()
# Benchmark options
#parser.add_option("-c", "--cmd",
#                  default=os.path.join(m5_root, "tests/test-progs/hello/bin/alpha/linux/hello"),
                  #default=os.path.join(m5_root, "tests/test-progs/radix/bin/radix"),
#                  help="The binary to run in syscall emulation mode.")
parser.add_option("-o", "--options", default="",
                  help="The options to pass to the binary, use \" \" around the entire\
                        string.")
parser.add_option("-i", "--input", default="",
                  help="A file of input to give to the binary.")
parser.add_option("-e", "--eio", default="bench/Loop_Count/mcf.eio",
                  help="The eio trace to run in syscall emulation mode.")
parser.add_option("-c", "--chkpt", default="",
                  help="The checkpoint to load.")
execfile(os.path.join(config_root, "common", "Options.py"))
(options, args) = parser.parse_args()
if args:
    print "Error: script doesn't take any positional arguments"
    sys.exit(1)
process = EioProcess(file = options.eio)
if options.chkpt != "":
    process.chkpt = options.chkpt
if options.detailed:
    #check for SMT workload
    eios = options.eio.split (';')
    if len(eios) > 1:
        process = []
        smt_idx = 0
        inputs = []
        if options.chkpt != "":
            inputs = options.chkpt.split(';')
        for eio in eios:
            smt_process = EioProcess()
            smt_process.file = eio
            if chkpts and chkpts[smt_idx]:
                smt_process.chkpt = chkpts[smt_idx]
            process += [smt_process, ]
            smt_idx += 1
(CPUClass, test_mem_mode, FutureClass) = Simulation.setCPUClass(options)
CPUClass.clock = '2GHz'
np = options.num_cpus
system = System(cpu = [CPUClass(cpu_id=i) for i in xrange(np)],
                physmem = PhysicalMemory(range=AddrRange("512MB")),
                membus = Bus(), mem_mode = test_mem_mode)
system.physmem.port = system.membus.port
for i in xrange(np):
    if options.caches:
        system.cpu[i].addPrivateSplitL1Caches(L1Cache(size = '32kB'),
                                              L1Cache(size = '64kB'))
    if options.l2cache:
        system.l2 = L2Cache(size='2MB')
        system.tol2bus = Bus()
        system.l2.cpu_side = system.tol2bus.port
        system.l2.mem_side = system.membus.port
        system.cpu[i].connectMemPorts(system.tol2bus )
    else:
        system.cpu[i].connectMemPorts(system.membus)
    system.cpu[i].workload = process
root = Root(system = system)
Simulation.run(options, root, system, FutureClass)
_______________________________________________
m5-users mailing list
m5-users@m5sim.org
http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
_______________________________________________
m5-users mailing list
m5-users@m5sim.org
http://m5sim.org/cgi-bin/mailman/listinfo/m5-users
